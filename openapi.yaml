openapi: 3.0.3
info:
  title: Admissão API
  version: "1.0.0"
  description: |
    API para cálculos sobre data de admissão e integração com ViaCEP.
    Recebe dataAdmissao, salarioBruto e cep, retorna tempo (anos/meses/dias), 35% do salario e endereço do ViaCEP.
servers:
  - url: http://localhost:8081
paths:
  /api/calculos:
    post:
      summary: Calcula e salva uma admissão
      description: Recebe dataAdmissao, salarioBruto e cep -> persiste em MongoDB e retorna resultados + endereço do ViaCEP.
      tags:
        - Calculos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculoRequestDTO'
            examples:
              exemplo:
                value:
                  dataAdmissao: "2022-05-10"
                  salarioBruto: 3500.00
                  cep: "66050080"
      responses:
        '201':
          description: Criado - cálculo realizado e salvo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculoResponseDTO'
              examples:
                sucesso:
                  value:
                    id: "68920eee582676dd86dc82b3"
                    dataAdmissao: "2022-05-10"
                    salarioBruto: 3500.00
                    anos: 3
                    meses: 2
                    dias: 26
                    porcentagem35: 1225.00
                    criadoEm: "2025-08-05T11:02:22"
                    endereco:
                      cep: "66050-080"
                      logradouro: "Rua Curuçá"
                      complemento: "até 765/766"
                      bairro: "Telégrafo"
                      localidade: "Belém"
                      uf: "PA"
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'
    get:
      summary: Listar admissões (pageable)
      description: Lista todas admissões com paginação e ordenação.
      tags:
        - Calculos
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            minimum: 1
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            example: criadoEm,desc
      responses:
        '200':
          description: Página de admissões
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAdmissao'
  /api/calculos/por-data:
    get:
      summary: Filtrar por data de admissão
      tags:
        - Calculos
      parameters:
        - name: inicio
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2022-01-01"
        - name: fim
          in: query
          required: true
          schema:
            type: string
            format: date
            example: "2024-01-01"
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            example: criadoEm,desc
      responses:
        '200':
          description: Página filtrada por data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAdmissao'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/calculos/por-salario:
    get:
      summary: Filtrar por salário mínimo
      tags:
        - Calculos
      parameters:
        - name: min
          in: query
          required: true
          schema:
            type: number
            format: double
            example: 3000
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            example: salarioBruto,desc
      responses:
        '200':
          description: Página filtrada por salário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAdmissao'
components:
  schemas:
    CalculoRequestDTO:
      type: object
      required:
        - dataAdmissao
        - salarioBruto
        - cep
      properties:
        dataAdmissao:
          type: string
          format: date
          description: Data de admissão (yyyy-MM-dd)
          example: "2022-05-10"
        salarioBruto:
          type: number
          format: double
          description: Salário bruto
          example: 3500.00
        cep:
          type: string
          description: CEP (12345-678 ou 12345678)
          example: "66050080"
    ViaCepDTO:
      type: object
      properties:
        cep: { type: string }
        logradouro: { type: string }
        complemento: { type: string }
        bairro: { type: string }
        localidade: { type: string }
        uf: { type: string }
        ddd: { type: string }
        ibge: { type: string }
    CalculoResponseDTO:
      type: object
      properties:
        id: { type: string }
        dataAdmissao: { type: string, format: date }
        salarioBruto: { type: number, format: double }
        anos: { type: integer }
        meses: { type: integer }
        dias: { type: integer }
        porcentagem35: { type: number, format: double }
        criadoEm: { type: string, format: date-time }
        endereco: { $ref: '#/components/schemas/ViaCepDTO' }
    Admissao:
      type: object
      properties:
        id: { type: string }
        dataAdmissao: { type: string, format: date }
        salarioBruto: { type: number, format: double }
        anos: { type: integer }
        meses: { type: integer }
        dias: { type: integer }
        porcentagem35: { type: number, format: double }
        criadoEm: { type: string, format: date-time }
    PageAdmissao:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Admissao'
        pageable:
          type: object
        totalElements:
          type: integer
        totalPages:
          type: integer
        number:
          type: integer
  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UnprocessableEntity:
      description: Erro de validação na camada de negócio
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Erro interno
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        messages:
          type: array
          items:
            type: string
        path:
          type: string
